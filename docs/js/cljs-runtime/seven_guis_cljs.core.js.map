{"version":3,"sources":["seven_guis_cljs/core.cljs"],"mappings":"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","names":["seven-guis-cljs.core/click-count","reagent.core.atom","cljs.core/deref","seven-guis-cljs.core/counter-field","seven-guis-cljs.core/count-button","cljs.core.swap_BANG_","cljs.core/inc","seven-guis-cljs.core/counter-gui","seven-guis-cljs.core/event->target-value","e","seven-guis-cljs.core/celsius-value","seven-guis-cljs.core/fahrenheit-value","seven-guis-cljs.core/fahrenheit->celsius","f","seven-guis-cljs.core/celsius->fahrenheit","c","seven-guis-cljs.core/parse-converter-input","input","n","js/parseFloat","valid","cljs.core._EQ_","seven-guis-cljs.core/change-celsius","val","G__36218","fexpr__36217","cljs.core/reset!","p1__36219#","seven-guis-cljs.core/celsius-field","seven-guis-cljs.core/change-fahrenheit","G__36221","fexpr__36220","p1__36222#","seven-guis-cljs.core/fahrenheit-field","seven-guis-cljs.core/temp-converter-gui","seven-guis-cljs.core/one-way-flight","seven-guis-cljs.core/return-flight","seven-guis-cljs.core/flight-type","p1__36223#","seven-guis-cljs.core/flight-type-select","seven-guis-cljs.core/red-background-style","seven-guis-cljs.core/start-value","seven-guis-cljs.core/return-value","seven-guis-cljs.core/has-point","s","pos","cljs.core.get","seven-guis-cljs.core/has-date-points","seven-guis-cljs.core/has-date-length","seven-guis-cljs.core/str-is-int","js/parseInt","seven-guis-cljs.core/date-num-pos","seven-guis-cljs.core/has-date-nums","p1__36224#","p2__36225#","cljs.core.reduce","and__4115__auto__","seven-guis-cljs.core/valid-date-str","seven-guis-cljs.core/date-str-to-int","cljs.core.apply","cljs.core/str","p1__36226#","cljs.core.map","seven-guis-cljs.core/return-strictly-before-start","start","return","p1__36227#","seven-guis-cljs.core/start-field","cljs.core/not","seven-guis-cljs.core/is-one-way-flight","p1__36228#","seven-guis-cljs.core/return-field","seven-guis-cljs.core/book-message","flight","dates","G__36229","js/Error","seven-guis-cljs.core/book-button","out","seven-guis-cljs.core/flight-booker-gui","seven-guis-cljs.core/home-page","seven-guis-cljs.core/mount-root","reagent.dom.render","js/document","seven-guis-cljs.core/init!"],"sourcesContent":["(ns seven-guis-cljs.core\n  (:require [reagent.core :as r]\n            [reagent.dom :as d]))\n\n;; -------------------------\n;; Views\n\n; special reagent atom for re-render\n(def click-count (r/atom 0))\n\n(defn counter-field []\n  [:input {:type \"text\"\n           ; @ for referencing the value\n           :value @click-count\n           ; React naming\n           :readOnly true}])\n\n(defn count-button []\n  [:input\n   ; defining attributes via maps\n   {:type \"button\"\n    :value \"Count\"\n    ; Reagent naming?\n    :on-click\n    ;swap! Atomically swaps the value of atom \n    #(swap! click-count inc)}])\n\n(defn counter-gui []\n  [:div\n   ; putting functions in vectors\n   [counter-field]\n   [count-button]])\n\n;; -------------------------\n\n(defn event->target-value [e]\n  (-> e .-target .-value))\n\n(def celsius-value (r/atom nil))\n(def fahrenheit-value (r/atom nil))\n\n(defn fahrenheit->celsius [f]\n  (* (- f 32) (/ 5 9)))\n\n(defn celsius->fahrenheit [c]\n  (+ (* c (/ 9 5)) 32))\n\n(defn parse-converter-input [input]\n  (let [n (js/parseFloat input)\n        valid (= input (str n))]\n    (when valid n)))\n\n(defn change-celsius [val]\n  (let [n (parse-converter-input val)]\n    (if n\n      ((reset! celsius-value n)\n       (reset! fahrenheit-value (celsius->fahrenheit n)))\n      (reset! celsius-value val))))\n\n(defn celsius-field []\n  [:div\n   [:input\n    {:type \"text\"\n     :value @celsius-value\n     :on-change #(-> %\n                     event->target-value\n                     change-celsius)}]])\n\n(defn change-fahrenheit [val]\n  (let [n (parse-converter-input val)]\n    (if n\n      ((reset! fahrenheit-value n)\n       (reset! celsius-value (fahrenheit->celsius n)))\n      (reset! fahrenheit-value val))))\n\n(defn fahrenheit-field []\n  [:div\n   [:input\n    {:type \"text\"\n     :value @fahrenheit-value\n     :on-change #(-> %\n                     event->target-value\n                     change-fahrenheit)}]])\n\n(defn temp-converter-gui []\n  [:span\n   [celsius-field] \"Celsius =\" [fahrenheit-field] \"Fahrenheit\"])\n\n;; -------------------------\n\n(def one-way-flight \"one-way flight\")\n(def return-flight \"return flight\")\n\n(def flight-type (r/atom one-way-flight))\n\n(defn flight-type-select []\n  [:select\n   {:on-change #(reset! flight-type (event->target-value %))}\n   [:option one-way-flight]\n   [:option return-flight]])\n\n(def red-background-style {:background-color \"red\"})\n\n(def start-value (r/atom \"27.03.2014\"))\n(def return-value (r/atom \"27.03.2014\"))\n\n(defn has-point [s pos]\n  (= (get s pos) \".\"))\n\n(defn has-date-points [s]\n  (and (has-point s 2)\n       (has-point s 5)))\n\n(defn has-date-length [s]\n  (= (.-length s) 10))\n\n(defn str-is-int [c]\n  (= c (str (js/parseInt c))))\n\n(def date-num-pos [0 1 3 4 6 7 8 9])\n\n(defn has-date-nums [s]\n  (reduce\n   #(and %1 (str-is-int (get s %2)))\n   true date-num-pos))\n\n; valid in the context of the gui guidelines, not in JS\n(defn valid-date-str [s]\n  (and (has-date-length s)\n       (has-date-points s)\n       (has-date-nums s)))\n\n; 7guis date-str not JS\n(defn date-str-to-int [s]\n  (js/parseInt (apply str (map #(get s %) date-num-pos))))\n\n(defn return-strictly-before-start [start return]\n  (> (date-str-to-int start)\n     (date-str-to-int return)))\n\n(defn start-field []\n  [:input\n   {:type \"text\"\n    :value @start-value\n    :style (when\n            (not (valid-date-str @start-value))\n             red-background-style)\n    :on-change #(reset! start-value\n                        (event->target-value %))}])\n\n(defn is-one-way-flight []\n  (= @flight-type one-way-flight))\n\n(defn return-field []\n  [:input\n   {:type \"text\"\n    :value @return-value\n    :disabled (is-one-way-flight)\n    :style (when\n            (not (valid-date-str @return-value))\n             red-background-style)\n    :on-change #(reset! return-value\n                        (event->target-value %))}])\n\n(defn book-message [flight dates]\n  (case flight\n    \"one-way flight\" (str \"You have booked a \" one-way-flight \" on \" (:start dates) \".\")\n    \"return flight\"  (str\n                      \"You have booked a flight on \" (:start dates)\n                      \" and a return flight on \" (:return dates) \".\")))\n\n(defn book-button []\n  (let [out (r/atom \"\")]\n    (fn []\n      [:div\n       [:button\n        {:on-click #(reset! out (book-message\n                                 @flight-type\n                                 {:start @start-value :return @return-value}))\n         :disabled (or (not (valid-date-str @start-value))\n                       (and\n                        (not (is-one-way-flight))\n                        (or\n                         (not (valid-date-str @return-value))\n                         (return-strictly-before-start @start-value @return-value))))}\n        \"Book\"]\n       [:div @out]])))\n\n(defn flight-booker-gui []\n  [:div\n   [flight-type-select]\n   [:br]\n   [start-field]\n   [:br]\n   [return-field]\n   [:br]\n   [book-button]])\n\n;; -------------------------\n\n(defn home-page []\n  [:div\n   [:u \"Counter\"]\n   [counter-gui]\n   [:br]\n   [:br]\n   [:u \"Temperature Converter\"]\n   [temp-converter-gui]\n   [:br]\n   [:br]\n   [:u \"Flight Booker\"]\n   [flight-booker-gui]\n   [:br]\n   [:br]])\n;; -------------------------\n;; Initialize app\n\n(defn mount-root []\n  (d/render [home-page] (.getElementById js/document \"app\")))\n\n(defn ^:export init! []\n  (mount-root))\n"]}